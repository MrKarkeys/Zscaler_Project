import React from 'react'
import { useEffect, useState } from "react";
import { useAuth } from "../contexts/AuthContext"
import NavBar from '../components/NavBar'
import BasicExample from '../components/PolicyDropdown'
import ProfilePage from "../components//ProfilePage"
import "../pagesCss/Malware.css"


const id = 1;

const MobMalwarePolicy = () => {
    const [policies, setPolicies] = useState(null);
    const {currentUser, logout} = useAuth();
    const user = currentUser.email;

    useEffect(() => {
        fetchData();
    }, []);

    useEffect(() => {
        console.log("Current policies:", policies);
    }, [policies]);

    
    async function fetchData() {
        try {
            console.log("fetching");
            const response = await fetch(`/mobmalware/${user}`);
            console.log("response");
            const dataArray = await response.json();
            console.log(dataArray);
    
            if (response.ok && dataArray.length > 0) {
                console.log("ok");
                setPolicies(dataArray[0]); // Use the first element of the array
            } else {
                console.log("not ok");
            }
        } catch (error) {
            console.error("Error fetching data:", error);
        }
    }
    


    const Button = ({ handleClick, children }) => {
        return (
            <button onClick={handleClick}>
                {children}
            </button>
        );
    };

    function changeStatus(name) {
        setPolicies(prevData => {
            const newData = { ...prevData };
            newData[name] = !newData[name];
            return newData;
        });
    }

    async function saveChanges(index) {
        try {
            const response = await fetch(`/mobmalware/put/${user}`, {
                method: "PUT",
                headers: {
                    "Content-Type": "application/json",
                },
                body: JSON.stringify(policies),
            });

            if (response.ok) {
                console.log("Changes saved successfully.");
            } else {
                console.log("Error saving changes.");
            }
        } catch (error) {
            console.error("Error saving changes:", error);
        }
    }

    console.log(policies);

    return (
        <div>
            <NavBar />
            <BasicExample />
            <ProfilePage />
            <div class="title mob-title">
                <h1>Mobile Malware Policies</h1>
            </div>
            <table class="table mob-table">
                <thead>
                    <tr>
                        <th> Name</th>
                        <th>Status</th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    {policies && Object.keys(policies).map((key) => (
                        <tr key={key}>
                            {key !== "user" && key !== "id" ? (
                                <>
                                    <td> {key.charAt(0).toUpperCase() + key.replace(/([a-z])([A-Z])/g, '$1 $2').slice(1)} </td>
                                    <td> {policies[key] ? "Allow" : "Block"} </td>
                                    <td>
                                        <button class="btn btn-primary" onClick={() => changeStatus(key)}>
                                            Change Status
                                        </button>
                                    </td>
                                </>
                            ) : (
                                <td></td>
                            )}
                        </tr>
                    ))
                    }
                </tbody>
                <button class="btn btn-primary" onClick={saveChanges}>Save Changes</button>
            </table>
        </div>
    );
};

export default MobMalwarePolicy;
