{"ast":null,"code":"var _jsxFileName = \"/Users/rishabhpandey/Desktop/security-policies-management-system/frontend/src/components/DataTable.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport EditCell from \"./EditCell\";\nimport { useAuth } from \"../contexts/AuthContext\";\nimport { FaSearch } from \"react-icons/fa\";\nimport './DataTable.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst departments = [\"Engineering\", \"Administration\", \"HR\"];\nconst DataTable = ({\n  columns,\n  url\n}) => {\n  _s();\n  const {\n    currentUser,\n    logout\n  } = useAuth();\n  const user = currentUser.email;\n  const [policies, setPolicies] = useState(null);\n  const [oldPolicies, setOldPolicies] = useState(null);\n  const [newPolicy, setNewPolicy] = useState({\n    name: '',\n    label: '',\n    department: \"Engineering\",\n    status: \"Enabled\",\n    user\n  });\n  const [editedPolicies, setEditedPolicies] = useState(new Set());\n  const [input, setInput] = useState(\"\");\n  const [completeFields, setCompleteFields] = useState(true);\n  const [incompletePolicies, setIncompletePolicies] = useState(new Set());\n\n  // Retrieves all policies from database associated with this user\n  useEffect(() => {\n    const getFirewallPolicies = async () => {\n      const response = await fetch(`/${url}/${user}`);\n      console.log(response);\n      const json = await response.json();\n      if (response.ok) {\n        setPolicies(json);\n        setOldPolicies(json);\n        console.log(json);\n      } else {\n        console.log(\"Get failed\");\n      }\n    };\n    getFirewallPolicies();\n  }, []);\n\n  // Adds newPolicy to the database\n  const addPolicy = async () => {\n    for (const key in newPolicy) {\n      if (newPolicy[key] === \"\") {\n        setCompleteFields(false);\n        return;\n      }\n    }\n    setCompleteFields(true);\n    const response = await fetch(`/${url}/post`, {\n      method: \"POST\",\n      body: JSON.stringify(newPolicy),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    const json = await response.json();\n    if (response.ok) {\n      console.log(\"Added policy\");\n      const newPoliciesTemp = [...policies, json];\n      setPolicies(newPoliciesTemp);\n      setOldPolicies(newPoliciesTemp);\n    } else {\n      console.log(\"Unable to add\");\n    }\n  };\n\n  // handles change in Add form\n  const handleChange = e => {\n    let updatedValue = e.target.value;\n    setNewPolicy({\n      ...newPolicy,\n      [e.target.name]: updatedValue\n    });\n  };\n  const deletePolicy = id => {\n    console.log(`/${url}/delete/${id}`);\n    fetch(`/${url}/delete/${id}`, {\n      method: 'DELETE'\n    }).then(response => {\n      if (response.ok) {\n        console.log(`Policy ${id} has been deleted`);\n        const newPoliciesTemp = policies.filter(p => p.id !== id);\n        setPolicies(newPoliciesTemp);\n        setOldPolicies(newPoliciesTemp);\n      } else {\n        console.error(\"**Failed to delete policy**\");\n      }\n    }).catch(error => {\n      console.error('Error during the delete request: ', error);\n    });\n  };\n\n  //PUT\n  const saveEditedPolicy = async policy => {\n    for (const key in policy) {\n      if (policy[key] === \"\") {\n        setIncompletePolicies(new Set(incompletePolicies).add(policy.id));\n        return;\n      }\n    }\n    console.log(policy);\n    const newSet = new Set(editedPolicies);\n    newSet.delete(policy.id);\n    setEditedPolicies(newSet);\n    setOldPolicies(oldPolicies.map(p => {\n      if (p.id === policy.id) {\n        return policy;\n      } else {\n        return p;\n      }\n    }));\n    const response = await fetch(`/${url}/put/${policy.id}`, {\n      method: \"PUT\",\n      body: JSON.stringify(policy),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    if (response.ok) {\n      console.log(\"Successfully updated policy \" + policy.id);\n    } else {\n      console.log(\"Unable to update policy\");\n    }\n  };\n  const cancelEditedPolicy = id => {\n    const newSet = new Set(editedPolicies);\n    newSet.delete(id);\n    setEditedPolicies(newSet);\n    const oldPolicy = oldPolicies.find(pol => pol.id === id);\n    setPolicies(policies.map(p => {\n      if (p.id === id) {\n        return oldPolicy;\n      } else {\n        return p;\n      }\n    }));\n  };\n  const updateValue = (id, field, newVal) => {\n    console.log(id, field);\n    console.log(policies);\n    const newList = policies.map(policy => {\n      return policy.id === id ? {\n        ...policy,\n        [field]: newVal\n      } : policy;\n    });\n    setPolicies(newList);\n    console.log(newList);\n  };\n  const handleInputChange = e => {\n    setInput(e);\n  };\n  const handleSearch = () => {\n    const filteredPolicies = oldPolicies.filter(policy => policy.name.includes(input));\n    setPolicies(filteredPolicies);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"table-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(FaSearch, {\n        id: \"search-icon\",\n        class: \"search-icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"searchbar\",\n        class: \"searchbar\",\n        placeholder: \"Type to search..\",\n        value: input,\n        onChange: e => handleInputChange(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn search-btn\",\n        type: \"submit\",\n        onClick: handleSearch,\n        children: \"SEARCH\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [columns && columns.map(col => /*#__PURE__*/_jsxDEV(\"th\", {\n            children: col.name\n          }, col.name, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 29\n          }, this)), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: [policies && policies.map(policy => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [columns.map(col => /*#__PURE__*/_jsxDEV(\"td\", {\n            children: editedPolicies && editedPolicies.has(policy.id) ? /*#__PURE__*/_jsxDEV(EditCell, {\n              id: policy.id,\n              column: col,\n              val: policy[col.field],\n              updateValue: updateValue\n            }, policy.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 43\n            }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n              children: policy[col.field]\n            }, policy.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 43\n            }, this)\n          }, col.name, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 33\n          }, this)), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: editedPolicies.has(policy.id) ? /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-primary change-button\",\n                onClick: () => saveEditedPolicy(policy),\n                children: \"Save\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 213,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-primary change-button\",\n                onClick: () => cancelEditedPolicy(policy.id),\n                children: \"Cancel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 215,\n                columnNumber: 41\n              }, this), incompletePolicies.has(policy.id) ? /*#__PURE__*/_jsxDEV(\"p\", {\n                style: {\n                  color: 'red',\n                  inlineSize: \"90px\"\n                },\n                children: \"Incomplete Fields!\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 217,\n                columnNumber: 78\n              }, this) : null]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 39\n            }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"btn btn-primary\",\n              onClick: () => setEditedPolicies(new Set(editedPolicies).add(policy.id)),\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 39\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"btn btn-primary\",\n              onClick: () => deletePolicy(policy.id),\n              id: \"deletebtn\",\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 29\n          }, this)]\n        }, policy.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 25\n        }, this)), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [columns && columns.map(col => /*#__PURE__*/_jsxDEV(\"td\", {\n            children: col.type === \"select\" ? /*#__PURE__*/_jsxDEV(\"select\", {\n              name: col.field,\n              onChange: handleChange,\n              children: col.options.map(o => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: o,\n                children: o\n              }, o, false, {\n                fileName: _jsxFileName,\n                lineNumber: 230,\n                columnNumber: 65\n              }, this))\n            }, col.field, false, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 37\n            }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n              type: col.type || \"text\",\n              name: col.field,\n              placeHolder: col.name,\n              onChange: handleChange\n            }, col.field, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 39\n            }, this)\n          }, col.name, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 29\n          }, this)), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"btn btn-primary\",\n              onClick: addPolicy,\n              children: \"Add\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 29\n            }, this), !completeFields ? /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                color: 'red',\n                inlineSize: \"90px\"\n              },\n              children: \"Incomplete Fields!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 48\n            }, this) : null]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 25\n          }, this)]\n        }, \"addPolicy\", true, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 172,\n    columnNumber: 9\n  }, this);\n};\n_s(DataTable, \"HdfxWvSreI9d9AfvKb50anvxoAw=\", false, function () {\n  return [useAuth];\n});\n_c = DataTable;\nexport default DataTable;\nvar _c;\n$RefreshReg$(_c, \"DataTable\");","map":{"version":3,"names":["useEffect","useState","EditCell","useAuth","FaSearch","jsxDEV","_jsxDEV","departments","DataTable","columns","url","_s","currentUser","logout","user","email","policies","setPolicies","oldPolicies","setOldPolicies","newPolicy","setNewPolicy","name","label","department","status","editedPolicies","setEditedPolicies","Set","input","setInput","completeFields","setCompleteFields","incompletePolicies","setIncompletePolicies","getFirewallPolicies","response","fetch","console","log","json","ok","addPolicy","key","method","body","JSON","stringify","headers","newPoliciesTemp","handleChange","e","updatedValue","target","value","deletePolicy","id","then","filter","p","error","catch","saveEditedPolicy","policy","add","newSet","delete","map","cancelEditedPolicy","oldPolicy","find","pol","updateValue","field","newVal","newList","handleInputChange","handleSearch","filteredPolicies","includes","class","children","className","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","onChange","type","onClick","col","has","column","val","style","color","inlineSize","options","o","placeHolder","_c","$RefreshReg$"],"sources":["/Users/rishabhpandey/Desktop/security-policies-management-system/frontend/src/components/DataTable.js"],"sourcesContent":["import { useEffect, useState } from \"react\"\nimport EditCell from \"./EditCell\";\nimport { useAuth } from \"../contexts/AuthContext\"\nimport { FaSearch } from \"react-icons/fa\";\nimport './DataTable.css';\n\nconst departments = [\"Engineering\", \"Administration\", \"HR\"]\n\n\nconst DataTable = ({ columns, url }) => {\n    const { currentUser, logout } = useAuth()\n    const user = currentUser.email;\n    const [policies, setPolicies] = useState(null);\n    const [oldPolicies, setOldPolicies] = useState(null);\n    const [newPolicy, setNewPolicy] = useState({\n        name: '',\n        label: '',\n        department: \"Engineering\",\n        status: \"Enabled\",\n        user\n    })\n    const [editedPolicies, setEditedPolicies] = useState(new Set());\n    const [input, setInput] = useState(\"\");\n    const [completeFields, setCompleteFields] = useState(true);\n    const [incompletePolicies, setIncompletePolicies] = useState(new Set());\n\n\n    // Retrieves all policies from database associated with this user\n    useEffect(() => {\n        const getFirewallPolicies = async () => {\n            const response = await fetch(`/${url}/${user}`)\n            console.log(response)\n            const json = await response.json()\n            if (response.ok) {\n                setPolicies(json)\n                setOldPolicies(json)\n                console.log(json)\n            } else {\n                console.log(\"Get failed\")\n            }\n        }\n        getFirewallPolicies();\n    }, [])\n\n    // Adds newPolicy to the database\n    const addPolicy = async () => {\n        for (const key in newPolicy) {\n            if (newPolicy[key] === \"\") {\n                setCompleteFields(false)\n                return\n            }\n        }\n        setCompleteFields(true);\n        const response = await fetch(`/${url}/post`, {\n            method: \"POST\",\n            body: JSON.stringify(newPolicy),\n            headers: {\n                'Content-Type': 'application/json',\n            }\n        })\n        const json = await response.json();\n        if (response.ok) {\n            console.log(\"Added policy\")\n            const newPoliciesTemp = [...policies, json]\n            setPolicies(newPoliciesTemp)\n            setOldPolicies(newPoliciesTemp)\n        } else {\n            console.log(\"Unable to add\")\n        }\n    }\n\n    // handles change in Add form\n    const handleChange = (e) => {\n        let updatedValue = e.target.value;\n        setNewPolicy({\n            ...newPolicy,\n            [e.target.name]: updatedValue\n        })\n    }\n\n    const deletePolicy = (id) => {\n        console.log(`/${url}/delete/${id}`);\n        fetch(`/${url}/delete/${id}`, {\n            method: 'DELETE',\n        })\n            .then((response) => {\n                if (response.ok) {\n                    console.log(`Policy ${id} has been deleted`)\n                    const newPoliciesTemp = policies.filter((p) => p.id !== id);\n                    setPolicies(newPoliciesTemp);\n                    setOldPolicies(newPoliciesTemp);\n                }\n                else {\n                    console.error(\"**Failed to delete policy**\")\n                }\n            })\n            .catch((error) => {\n                console.error('Error during the delete request: ', error);\n            });\n    }\n\n    //PUT\n    const saveEditedPolicy = async (policy) => {\n        for (const key in policy) {\n            if (policy[key] === \"\") {\n                setIncompletePolicies(new Set(incompletePolicies).add(policy.id))\n                return\n            }\n        }\n\n        console.log(policy)\n        const newSet = new Set(editedPolicies);\n        newSet.delete(policy.id);\n        setEditedPolicies(newSet)\n\n        setOldPolicies(oldPolicies.map((p) => {\n            if (p.id === policy.id) {\n                return policy;\n            } else {\n                return p;\n            }\n        }))\n        const response = await fetch(`/${url}/put/${policy.id}`, {\n            method: \"PUT\",\n            body: JSON.stringify(policy),\n            headers: {\n                \"Content-Type\": \"application/json\"\n            }\n        })\n\n        if (response.ok) {\n            console.log(\"Successfully updated policy \" + policy.id);\n        } else {\n            console.log(\"Unable to update policy\");\n        }\n    }\n\n    const cancelEditedPolicy = (id) => {\n        const newSet = new Set(editedPolicies);\n        newSet.delete(id);\n        setEditedPolicies(newSet)\n        const oldPolicy = oldPolicies.find(pol => pol.id === id)\n        setPolicies(policies.map((p) => {\n            if (p.id === id) {\n                return oldPolicy\n            } else {\n                return p;\n            }\n        }))\n    }\n\n    const updateValue = (id, field, newVal) => {\n        console.log(id, field)\n        console.log(policies)\n        const newList = policies.map((policy) => {\n            return policy.id === id ? { ...policy, [field]: newVal } : policy;\n        })\n        setPolicies(newList)\n        console.log(newList)\n    }\n\n    const handleInputChange = (e) => {\n        setInput(e);\n    }\n\n    const handleSearch = () => {\n        const filteredPolicies = oldPolicies.filter(policy => policy.name.includes(input));\n        setPolicies(filteredPolicies);\n    }\n\n    return (\n        <div class=\"table-container\">\n            <div className=\"input-wrapper\">\n                <FaSearch id=\"search-icon\" class=\"search-icon\"/>\n                <input\n                    id=\"searchbar\"\n                    class=\"searchbar\"\n                    placeholder=\"Type to search..\"\n                    value={input}\n                    onChange={(e) => handleInputChange(e.target.value)}\n                />\n                <button className=\"btn search-btn\" type=\"submit\" onClick={handleSearch}>SEARCH</button>\n            </div>\n            <table className=\"table\">\n                <thead>\n                    <tr>\n                        {columns && columns.map((col) => (\n                            <th key={col.name}>{col.name}</th>\n                        ))}\n                        <th>Actions</th>\n                        <th>Delete</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {policies && policies.map((policy) => (\n                        <tr key={policy.id}>\n                            {columns.map((col) => (\n                                <td key={col.name}>\n                                    {editedPolicies && editedPolicies.has(policy.id)\n                                        ? <EditCell\n                                            key={policy.id}\n                                            id={policy.id}\n                                            column={col}\n                                            val={policy[col.field]}\n                                            updateValue={updateValue} />\n                                        : <span key={policy.id}>{policy[col.field]}</span>\n                                    }\n                                </td>\n                            ))}\n                            <td>\n                                {editedPolicies.has(policy.id)\n                                    ? <div>\n                                        <button className=\"btn btn-primary change-button\"\n                                            onClick={() => saveEditedPolicy(policy)}>Save</button>\n                                        <button className=\"btn btn-primary change-button\"\n                                            onClick={() => cancelEditedPolicy(policy.id)}>Cancel</button>\n                                        {incompletePolicies.has(policy.id) ? <p style={{ color: 'red', inlineSize: \"90px\" }}>Incomplete Fields!</p> : null}\n                                    </div>\n                                    : <button type=\"button\" className=\"btn btn-primary\" onClick={() => setEditedPolicies(new Set(editedPolicies).add(policy.id))}>Edit</button>}\n                            </td>\n                            <td><button type=\"button\" className=\"btn btn-primary\" onClick={() => deletePolicy(policy.id)} id=\"deletebtn\">Delete</button></td>\n                        </tr>\n                    ))}\n\n                    <tr key=\"addPolicy\">\n                        {columns && columns.map((col) => (\n                            <td key={col.name}>\n                                {col.type === \"select\" ?\n                                    <select key={col.field} name={col.field} onChange={handleChange}>\n                                        {col.options.map((o) => <option key={o} value={o}>{o}</option>)}\n                                    </select>\n                                    : <input key={col.field} type={col.type || \"text\"} name={col.field} placeHolder={col.name} onChange={handleChange}></input>\n                                }\n                            </td>\n                        ))}\n                        <td><button type=\"button\" className=\"btn btn-primary\" onClick={addPolicy}>Add</button>\n                            {!completeFields ? <p style={{ color: 'red', inlineSize: \"90px\" }}>Incomplete Fields!</p> : null}\n                        </td>\n                    </tr>\n\n                </tbody>\n            </table>\n        </div>\n    )\n}\n\nexport default DataTable;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}