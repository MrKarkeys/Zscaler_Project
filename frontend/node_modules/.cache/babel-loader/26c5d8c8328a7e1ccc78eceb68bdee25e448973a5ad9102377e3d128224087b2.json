{"ast":null,"code":"var _jsxFileName = \"/Users/rishabhpandey/Desktop/security-policies-management-system/frontend/src/components/DataTable.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport EditCell from \"./EditCell\";\nimport { useAuth } from \"../contexts/AuthContext\";\nimport { FaSearch } from \"react-icons/fa\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst departments = [\"Engineering\", \"Administration\", \"HR\"];\nconst DataTable = ({\n  columns,\n  url\n}) => {\n  _s();\n  const {\n    currentUser,\n    logout\n  } = useAuth();\n  const user = currentUser.email;\n  const [policies, setPolicies] = useState(null);\n  const [oldPolicies, setOldPolicies] = useState(null);\n  const [newPolicy, setNewPolicy] = useState({\n    name: '',\n    label: '',\n    department: \"Engineering\",\n    status: \"Enabled\",\n    user\n  });\n  const [editedPolicies, setEditedPolicies] = useState(new Set());\n  const [input, setInput] = useState(\"\");\n  const [completeFields, setCompleteFields] = useState(true);\n\n  // Will retrieve policies from db in real time\n  useEffect(() => {\n    const getFirewallPolicies = async () => {\n      const response = await fetch(`/${url}/${user}`);\n      console.log(response);\n      const json = await response.json();\n      if (response.ok) {\n        setPolicies(json);\n        setOldPolicies(json);\n        console.log(json);\n      } else {\n        console.log(\"Get failed\");\n      }\n    };\n    getFirewallPolicies();\n  }, []);\n  const addPolicy = async () => {\n    for (const key in newPolicy) {\n      console.log('hey');\n      if (newPolicy[key] === \"\") {\n        console.log(newPolicy[key]);\n        setCompleteFields(false);\n        complete = false;\n      }\n    }\n    const response = await fetch(`/${url}/post`, {\n      method: \"POST\",\n      body: JSON.stringify(newPolicy),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    const json = await response.json();\n    if (response.ok) {\n      console.log(\"Added policy\");\n      const newPoliciesTemp = [...policies, json];\n      setPolicies(newPoliciesTemp);\n      setOldPolicies(newPoliciesTemp);\n    } else {\n      console.log(\"Unable to add\");\n    }\n  };\n  const handleChange = e => {\n    let updatedValue = e.target.value;\n    setNewPolicy({\n      ...newPolicy,\n      [e.target.name]: updatedValue\n    });\n  };\n  const deletePolicy = id => {\n    //Todo: remove from \"policies\" var\n    console.log(`/${url}/delete/${id}`);\n    fetch(`/${url}/delete/${id}`, {\n      method: 'DELETE' //405 error if i don't put this; due to the \".get() in api endpoint\"\n    }).then(response => {\n      if (response.ok) {\n        console.log(`Policy ${id} has been deleted`);\n        const newPoliciesTemp = policies.filter(p => p.id !== id);\n        setPolicies(newPoliciesTemp);\n        setOldPolicies(newPoliciesTemp);\n      } else {\n        console.error(\"**Failed to delete policy**\");\n      }\n    }).catch(error => {\n      console.error('Error during the delete request: ', error);\n    });\n  };\n\n  //PUT\n  const saveEditedPolicy = async policy => {\n    console.log(policy);\n    const newSet = new Set(editedPolicies);\n    newSet.delete(policy.id);\n    setEditedPolicies(newSet);\n    setOldPolicies(oldPolicies.map(p => {\n      if (p.id === policy.id) {\n        return policy;\n      } else {\n        return p;\n      }\n    }));\n    const response = await fetch(`/${url}/put/${policy.id}`, {\n      method: \"PUT\",\n      body: JSON.stringify(policy),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    if (response.ok) {\n      console.log(\"Successfully updated policy \" + policy.id);\n    } else {\n      console.log(\"Unable to update policy\");\n    }\n  };\n  const cancelEditedPolicy = id => {\n    const newSet = new Set(editedPolicies);\n    newSet.delete(id);\n    setEditedPolicies(newSet);\n    const oldPolicy = oldPolicies.find(pol => pol.id === id);\n    setPolicies(policies.map(p => {\n      if (p.id === id) {\n        return oldPolicy;\n      } else {\n        return p;\n      }\n    }));\n  };\n  const updateValue = (id, field, newVal) => {\n    console.log(id, field);\n    console.log(policies);\n    const newList = policies.map(policy => {\n      return policy.id === id ? {\n        ...policy,\n        [field]: newVal\n      } : policy;\n    });\n    setPolicies(newList);\n    console.log(newList);\n  };\n  const handleInputChange = e => {\n    setInput(e);\n  };\n  const handleSearch = () => {\n    const filteredPolicies = oldPolicies.filter(policy => policy.name.includes(input));\n    setPolicies(filteredPolicies);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"table-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(FaSearch, {\n        id: \"search-icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"searchbar\",\n        placeholder: \"Type to search..\",\n        value: input,\n        onChange: e => handleInputChange(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn search-btn\",\n        type: \"submit\",\n        onClick: handleSearch,\n        children: \"SEARCH\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [columns && columns.map(col => /*#__PURE__*/_jsxDEV(\"th\", {\n            children: col.name\n          }, col.name, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 25\n          }, this)), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: [policies && policies.map(policy => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [columns.map(col => /*#__PURE__*/_jsxDEV(\"td\", {\n            children: editedPolicies && editedPolicies.has(policy.id) ? /*#__PURE__*/_jsxDEV(EditCell, {\n              id: policy.id,\n              column: col,\n              val: policy[col.field],\n              updateValue: updateValue\n            }, policy.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 35\n            }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n              children: policy[col.field]\n            }, policy.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 35\n            }, this)\n          }, col.name, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 29\n          }, this)), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: editedPolicies.has(policy.id) ? /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-primary change-button\",\n                onClick: () => saveEditedPolicy(policy),\n                children: \"Save\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 203,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-primary change-button\",\n                onClick: () => cancelEditedPolicy(policy.id),\n                children: \"Cancel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 205,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 31\n            }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"btn btn-primary\",\n              onClick: () => setEditedPolicies(new Set(editedPolicies).add(policy.id)),\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 31\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"btn btn-primary\",\n              onClick: () => deletePolicy(policy.id),\n              id: \"deletebtn\",\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 25\n          }, this)]\n        }, policy.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 21\n        }, this)), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [columns && columns.map(col => /*#__PURE__*/_jsxDEV(\"td\", {\n            children: col.type === \"select\" ? /*#__PURE__*/_jsxDEV(\"select\", {\n              name: col.field,\n              onChange: handleChange,\n              children: col.options.map(o => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: o,\n                children: o\n              }, o, false, {\n                fileName: _jsxFileName,\n                lineNumber: 219,\n                columnNumber: 57\n              }, this))\n            }, col.field, false, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 29\n            }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n              type: col.type || \"text\",\n              name: col.field,\n              placeHolder: col.name,\n              onChange: handleChange\n            }, col.field, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 31\n            }, this)\n          }, col.name, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 25\n          }, this)), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"btn btn-primary\",\n              onClick: addPolicy,\n              children: \"Add\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 21\n          }, this)]\n        }, \"addPolicy\", true, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 163,\n    columnNumber: 9\n  }, this);\n};\n_s(DataTable, \"FinWyQEMnVNgau4bphgwJxjyfDc=\", false, function () {\n  return [useAuth];\n});\n_c = DataTable;\nexport default DataTable;\nvar _c;\n$RefreshReg$(_c, \"DataTable\");","map":{"version":3,"names":["useEffect","useState","EditCell","useAuth","FaSearch","jsxDEV","_jsxDEV","departments","DataTable","columns","url","_s","currentUser","logout","user","email","policies","setPolicies","oldPolicies","setOldPolicies","newPolicy","setNewPolicy","name","label","department","status","editedPolicies","setEditedPolicies","Set","input","setInput","completeFields","setCompleteFields","getFirewallPolicies","response","fetch","console","log","json","ok","addPolicy","key","complete","method","body","JSON","stringify","headers","newPoliciesTemp","handleChange","e","updatedValue","target","value","deletePolicy","id","then","filter","p","error","catch","saveEditedPolicy","policy","newSet","delete","map","cancelEditedPolicy","oldPolicy","find","pol","updateValue","field","newVal","newList","handleInputChange","handleSearch","filteredPolicies","includes","class","children","className","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","onChange","type","onClick","col","has","column","val","add","options","o","placeHolder","_c","$RefreshReg$"],"sources":["/Users/rishabhpandey/Desktop/security-policies-management-system/frontend/src/components/DataTable.js"],"sourcesContent":["import { useEffect, useState } from \"react\"\nimport EditCell from \"./EditCell\";\nimport { useAuth } from \"../contexts/AuthContext\"\nimport { FaSearch } from \"react-icons/fa\";\n\nconst departments = [\"Engineering\", \"Administration\", \"HR\"]\n\n\nconst DataTable = ({ columns, url}) => {\n    const { currentUser, logout } = useAuth()\n    const user = currentUser.email;\n    const [policies, setPolicies] = useState(null);\n    const [oldPolicies, setOldPolicies] = useState(null);\n    const [newPolicy, setNewPolicy] = useState({\n        name: '',\n        label: '',\n        department: \"Engineering\",\n        status: \"Enabled\",\n        user\n    })\n    const [editedPolicies, setEditedPolicies] = useState(new Set());\n    const [input, setInput] = useState(\"\");\n    const [completeFields, setCompleteFields] = useState(true);\n    \n    \n    // Will retrieve policies from db in real time\n    useEffect(() => {\n        const getFirewallPolicies = async () => {\n            const response = await fetch(`/${url}/${user}`)\n            console.log(response)\n            const json = await response.json()\n            if (response.ok) {\n                setPolicies(json)\n                setOldPolicies(json)\n                console.log(json)\n            } else {\n                console.log(\"Get failed\")\n            }\n        }\n        getFirewallPolicies();\n    }, [])\n\n    const addPolicy = async () => {\n        for (const key in newPolicy) {\n            console.log('hey')\n            if (newPolicy[key] === \"\") {\n                console.log(newPolicy[key]);\n                setCompleteFields(false)\n                complete = false\n            }\n        }\n        const response = await fetch(`/${url}/post`, {\n            method: \"POST\",\n            body: JSON.stringify(newPolicy),\n            headers: {\n                'Content-Type': 'application/json',\n            }\n        })\n        const json = await response.json();\n        if (response.ok) {\n            console.log(\"Added policy\")\n            const newPoliciesTemp = [...policies, json]\n            setPolicies(newPoliciesTemp)\n            setOldPolicies(newPoliciesTemp)\n        } else {\n            console.log(\"Unable to add\")\n        }\n    }\n\n    const handleChange = (e) => {\n        let updatedValue = e.target.value;\n        setNewPolicy({\n            ...newPolicy,\n            [e.target.name]: updatedValue\n        })\n    }\n\n    const deletePolicy = (id) => {\n        //Todo: remove from \"policies\" var\n        console.log(`/${url}/delete/${id}`);\n        fetch(`/${url}/delete/${id}`, {\n            method:'DELETE', //405 error if i don't put this; due to the \".get() in api endpoint\"\n        })\n        .then((response) => {\n            if (response.ok){\n                console.log(`Policy ${id} has been deleted`)\n                const newPoliciesTemp = policies.filter((p) => p.id !== id);\n                setPolicies(newPoliciesTemp);\n                setOldPolicies(newPoliciesTemp);\n            }\n            else{\n                console.error(\"**Failed to delete policy**\")\n            }\n        })\n        .catch((error) => {\n            console.error('Error during the delete request: ', error);\n        });          \n    }\n\n    //PUT\n    const saveEditedPolicy = async (policy) => {\n        console.log(policy)\n        const newSet = new Set(editedPolicies);\n        newSet.delete(policy.id);\n        setEditedPolicies(newSet)\n\n        setOldPolicies(oldPolicies.map((p)=>{\n            if (p.id === policy.id) {\n                return policy;\n            } else {\n                return p;\n            }\n        }))\n        const response = await fetch(`/${url}/put/${policy.id}`, {\n            method: \"PUT\",\n            body: JSON.stringify(policy),\n            headers: {\n                \"Content-Type\": \"application/json\"\n            } \n        })\n\n        if (response.ok) {\n            console.log(\"Successfully updated policy \" + policy.id);\n        } else {\n            console.log(\"Unable to update policy\");\n        }\n    }\n\n    const cancelEditedPolicy = (id) => {\n        const newSet = new Set(editedPolicies);\n        newSet.delete(id);\n        setEditedPolicies(newSet)\n        const oldPolicy = oldPolicies.find(pol => pol.id === id)\n        setPolicies(policies.map((p) => {\n            if (p.id === id) {\n                return oldPolicy\n            } else {\n                return p;\n            }\n        }))\n    }\n\n    const updateValue = (id, field, newVal) => {\n        console.log(id, field)\n        console.log(policies)\n        const newList = policies.map((policy) => {\n            return policy.id === id ? {...policy, [field]: newVal} : policy;\n        })\n        setPolicies(newList)\n        console.log(newList)\n    }\n\n    const handleInputChange = (e) => {\n        setInput(e);\n    }\n\n    const handleSearch = () => {\n        const filteredPolicies = oldPolicies.filter(policy => policy.name.includes(input));\n        setPolicies(filteredPolicies);\n    }\n\n    return (\n        <div class=\"table-container\">\n        <div className=\"input-wrapper\">\n          <FaSearch id=\"search-icon\" />\n          <input\n            id=\"searchbar\"\n            placeholder=\"Type to search..\"\n            value={input}\n            onChange={(e) => handleInputChange(e.target.value)}\n          />\n          <button className=\"btn search-btn\" type=\"submit\" onClick ={handleSearch}>SEARCH</button>\n        </div>\n        <table className=\"table\">\n            <thead>\n                <tr>\n                    {columns && columns.map((col) => (\n                        <th key={col.name}>{col.name}</th>\n                    ))}\n                    <th>Actions</th>\n                    <th>Delete</th>\n                </tr>\n            </thead>\n            <tbody>\n                {policies && policies.map((policy) => (\n                    <tr key={policy.id}>\n                        {columns.map((col) => (\n                            <td key={col.name}>\n                                {editedPolicies && editedPolicies.has(policy.id) \n                                ? <EditCell \n                                    key={policy.id} \n                                    id={policy.id} \n                                    column={col} \n                                    val={policy[col.field]} \n                                    updateValue={updateValue} />\n                                : <span key={policy.id}>{policy[col.field]}</span>\n                                }\n                            </td>\n                        ))}\n                        <td>\n                            {editedPolicies.has(policy.id) \n                            ? <div>\n                                <button className=\"btn btn-primary change-button\" \n                                    onClick={() => saveEditedPolicy(policy)}>Save</button>\n                                <button className=\"btn btn-primary change-button\" \n                                    onClick={() => cancelEditedPolicy(policy.id)}>Cancel</button>\n                            </div>\n                            : <button type=\"button\" className=\"btn btn-primary\" onClick={() => setEditedPolicies(new Set(editedPolicies).add(policy.id))}>Edit</button>}\n                        </td>\n                        <td><button type=\"button\" className=\"btn btn-primary\" onClick={() => deletePolicy(policy.id)} id=\"deletebtn\">Delete</button></td>\n                    </tr>\n                ))}\n                \n                <tr key=\"addPolicy\">\n                    {columns && columns.map((col) => (\n                        <td key={col.name}>\n                            {col.type === \"select\" ? \n                            <select key={col.field} name={col.field} onChange={handleChange}>\n                                {col.options.map((o) => <option key={o} value={o}>{o}</option>)}\n                            </select>\n                            : <input key={col.field} type={col.type || \"text\"} name={col.field} placeHolder={col.name} onChange={handleChange}></input>\n                            }\n                        </td>\n                    ))}\n                    <td><button type=\"button\" className=\"btn btn-primary\" onClick={addPolicy}>Add</button></td>\n                </tr>\n                          \n            </tbody>\n        </table>\n        </div>\n    )\n}\n\nexport default DataTable;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}