{"ast":null,"code":"var _jsxFileName = \"/Users/rishabhpandey/Desktop/security-policies-management-system/frontend/src/pages/MobMalwarePolicy.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst user = \"PAP\";\nconst id = 1;\nconst MobMalwarePolicy = () => {\n  _s();\n  const [policies, setPolicies] = useState(null);\n  useEffect(() => {\n    fetchData();\n  }, []);\n  useEffect(() => {\n    console.log(\"Current policies:\", policies);\n  }, [policies]);\n  async function fetchData() {\n    try {\n      console.log(\"fetching\");\n      const response = await fetch(`/mobmalware/${user}`);\n      console.log(\"response\");\n      const dataArray = await response.json();\n      console.log(dataArray);\n      if (response.ok && dataArray.length > 0) {\n        console.log(\"ok\");\n        setPolicies(dataArray[0]); // Use the first element of the array\n      } else {\n        console.log(\"not ok\");\n      }\n    } catch (error) {\n      console.error(\"Error fetching data:\", error);\n    }\n  }\n  const Button = ({\n    handleClick,\n    children\n  }) => {\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleClick,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this);\n  };\n  function changeStatus(name) {\n    setPolicies(prevData => {\n      const newData = {\n        ...prevData\n      };\n      newData[name] = !newData[name];\n      return newData;\n    });\n  }\n  async function saveChanges(index) {\n    try {\n      const response = await fetch(`/mobmalware/put/${id}`, {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(policies)\n      });\n      if (response.ok) {\n        console.log(\"Changes saved successfully.\");\n      } else {\n        console.log(\"Error saving changes.\");\n      }\n    } catch (error) {\n      console.error(\"Error saving changes:\", error);\n    }\n  }\n  console.log(policies);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \" Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: policies && Object.keys(policies).slice(2).map(key => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: [\" \", key, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [\" \", policies[key] ? \"Allow\" : \"Block\", \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              handleClick: () => changeStatus(key),\n              children: \"Change Status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 33\n          }, this)]\n        }, key, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: saveChanges,\n        children: \"Save Changes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 9\n  }, this);\n};\n_s(MobMalwarePolicy, \"i0cs5kNs+Xn6sslQqWPJt8Xa2cc=\");\n_c = MobMalwarePolicy;\nexport default MobMalwarePolicy;\nvar _c;\n$RefreshReg$(_c, \"MobMalwarePolicy\");","map":{"version":3,"names":["useEffect","useState","jsxDEV","_jsxDEV","user","id","MobMalwarePolicy","_s","policies","setPolicies","fetchData","console","log","response","fetch","dataArray","json","ok","length","error","Button","handleClick","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","changeStatus","name","prevData","newData","saveChanges","index","method","headers","body","JSON","stringify","Object","keys","slice","map","key","_c","$RefreshReg$"],"sources":["/Users/rishabhpandey/Desktop/security-policies-management-system/frontend/src/pages/MobMalwarePolicy.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\n\nconst user = \"PAP\";\nconst id = 1;\n\nconst MobMalwarePolicy = () => {\n    const [policies, setPolicies] = useState(null);\n\n    useEffect(() => {\n        fetchData();\n    }, []);\n\n    useEffect(() => {\n        console.log(\"Current policies:\", policies);\n    }, [policies]);\n\n    \n    async function fetchData() {\n        try {\n            console.log(\"fetching\");\n            const response = await fetch(`/mobmalware/${user}`);\n            console.log(\"response\");\n            const dataArray = await response.json();\n            console.log(dataArray);\n    \n            if (response.ok && dataArray.length > 0) {\n                console.log(\"ok\");\n                setPolicies(dataArray[0]); // Use the first element of the array\n            } else {\n                console.log(\"not ok\");\n            }\n        } catch (error) {\n            console.error(\"Error fetching data:\", error);\n        }\n    }\n    \n\n\n    const Button = ({ handleClick, children }) => {\n        return (\n            <button onClick={handleClick}>\n                {children}\n            </button>\n        );\n    };\n\n    function changeStatus(name) {\n        setPolicies(prevData => {\n            const newData = { ...prevData };\n            newData[name] = !newData[name];\n            return newData;\n        });\n    }\n\n    async function saveChanges(index) {\n        try {\n            const response = await fetch(`/mobmalware/put/${id}`, {\n                method: \"PUT\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                },\n                body: JSON.stringify(policies),\n            });\n\n            if (response.ok) {\n                console.log(\"Changes saved successfully.\");\n            } else {\n                console.log(\"Error saving changes.\");\n            }\n        } catch (error) {\n            console.error(\"Error saving changes:\", error);\n        }\n    }\n\n    console.log(policies);\n\n    return (\n        <div>\n            <table>\n                <thead>\n                    <tr>\n                        <th> Name</th>\n                        <th>Status</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {policies && Object.keys(policies).slice(2).map((key) => (\n                            <tr key={key}>\n                                <td> {key} </td>\n                                <td> {policies[key] ? \"Allow\" : \"Block\"} </td>\n                                <td>\n                                    <Button handleClick={() => changeStatus(key)}>\n                                        Change Status\n                                    </Button>\n                                </td>\n                            </tr>\n                        ))\n                    }\n                </tbody>\n                <button onClick={saveChanges}>Save Changes</button>\n            </table>\n        </div>\n    );\n};\n\nexport default MobMalwarePolicy;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}